@using OVO.Web.Areas.Administration.ViewModels
@using GridMvc.Html
@model UsersListViewModel


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <h1>Users</h1>

    @Html.Grid(Model.Users).Columns(columns =>
        {
            columns.Add(x => x.Email).Titled("Email").SetWidth(100);
            columns.Add(x => x.Role).Titled("Role").SetWidth(50);
            columns.Add(x => x.IsDeleted).Titled("IsDeleted").SetWidth(20);
            columns.Add(x => x.DeletedOn).Titled("Deletion Date").SetWidth(50);
            columns.Add(x => x.CreatedOn).Titled("Creation Date").SetWidth(50);
            columns.Add(x => x.ModifiedOn).Titled("Modified Date").SetWidth(50);

            columns.Add()
             .Encoded(false)
             .Sanitized(false)
             .SetWidth(50)
             .RenderValueAs(x => @<div id="delete-btn">@Html.ActionLink("Edit", "Edit", new { userEmail = x.Email }, new { @class = "gridbutton" })</div>);

            columns.Add()
             .Encoded(false)
             .Sanitized(false)
             .SetWidth(50)
             .RenderValueAs(x => @<div id="delete-btn">
                @if (!x.IsDeleted)
                {
                    @Html.ActionLink("Delete", "Delete", new { userEmail = x.Email }, new { @class = "gridbutton" })
                }
                else
                {
                    @Html.ActionLink("Undelete", "Undelete", new { userEmail = x.Email }, new { @class = "gridbutton" })
                }

            </div>);
        }).WithPaging(10).EmptyText("No available users!")
</div>

