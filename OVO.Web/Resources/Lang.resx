<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddManufacturer" xml:space="preserve">
    <value>Add Manufacturer</value>
  </data>
  <data name="AddModel" xml:space="preserve">
    <value>Add Model</value>
  </data>
  <data name="AddVehicle" xml:space="preserve">
    <value>Add Vehicle</value>
  </data>
  <data name="AdminMenu" xml:space="preserve">
    <value>Admin Menu</value>
  </data>
  <data name="AllManufacturers" xml:space="preserve">
    <value>All Manufacturers</value>
  </data>
  <data name="AllModels" xml:space="preserve">
    <value>All Models</value>
  </data>
  <data name="AllUsers" xml:space="preserve">
    <value>All Users</value>
  </data>
  <data name="AllVehicles" xml:space="preserve">
    <value>All Vehicles</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>App for organize your vehicles. You can add your detail vehicles data, add events and cronjobs for every vehicle. You must just login to access all functionalities.</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Online Vehicle Organizer</value>
  </data>
  <data name="AreSure" xml:space="preserve">
    <value>Are you sure to delete</value>
  </data>
  <data name="AreSureRes" xml:space="preserve">
    <value>Are you sure to restore</value>
  </data>
  <data name="Bulgarian" xml:space="preserve">
    <value>Bulgarian</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="ContactDesc" xml:space="preserve">
    <value>This app is produced by</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="IsDeleted" xml:space="preserve">
    <value>IsDeleted</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Manufacturer" xml:space="preserve">
    <value>Manufacturer</value>
  </data>
  <data name="Manufacturers" xml:space="preserve">
    <value>Manufacturers</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="Models" xml:space="preserve">
    <value>Models</value>
  </data>
  <data name="MyVehicles" xml:space="preserve">
    <value>My Vehicles</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoMan" xml:space="preserve">
    <value>No available Manufacturers!</value>
  </data>
  <data name="NoMod" xml:space="preserve">
    <value>No available Models!</value>
  </data>
  <data name="NoUsers" xml:space="preserve">
    <value>No available Users!</value>
  </data>
  <data name="NoVeh" xml:space="preserve">
    <value>No available Vehicles!</value>
  </data>
  <data name="PassConfirm" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PerMonths" xml:space="preserve">
    <value>Period (months)</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegNumber" xml:space="preserve">
    <value>Reg Number</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember Me?</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Vehicle" xml:space="preserve">
    <value>Vehicle</value>
  </data>
  <data name="AddCronJob" xml:space="preserve">
    <value>Add CronJob</value>
  </data>
  <data name="AddVehicleEvent" xml:space="preserve">
    <value>Add Vehicle Event</value>
  </data>
  <data name="Chat" xml:space="preserve">
    <value>Chat</value>
  </data>
  <data name="ChatDescription" xml:space="preserve">
    <value>You can use our chat room to connect with other users of the system. If you have any questions about usage, they may help you.</value>
  </data>
  <data name="Github" xml:space="preserve">
    <value>Github</value>
  </data>
  <data name="Me" xml:space="preserve">
    <value>Zhivko Ivanov</value>
  </data>
  <data name="NotificationsDescription" xml:space="preserve">
    <value>We wil email you when your insurrance date and service date are comming, for every added vehicle.</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="WhatAboutForChat" xml:space="preserve">
    <value>What about chat</value>
  </data>
  <data name="WhatToExpect" xml:space="preserve">
    <value>What to expect</value>
  </data>
  <data name="WhatWeOffer" xml:space="preserve">
    <value>What we offer</value>
  </data>
  <data name="WhatWinDescriptionOne" xml:space="preserve">
    <value>Keep detailed profiles for all your vehicles.</value>
  </data>
  <data name="WhatWinDescriptionThree" xml:space="preserve">
    <value>Do not waste time on constant checks for important dates and prevent them from being avoided.</value>
  </data>
  <data name="WhatWinDescriptionTwo" xml:space="preserve">
    <value>You can keep a history of all the events associated with them.</value>
  </data>
  <data name="WhatYouWin" xml:space="preserve">
    <value>What you win</value>
  </data>
  <data name="YourMessage" xml:space="preserve">
    <value>Your Message</value>
  </data>
</root>